/**
 * This code was generated by Builder.io.
 */
"use client";
import React, { useEffect, useState } from "react";
import Header from "../../components/component/Header";
import ProductDetails from "./ProductDetails";
import RelatedProducts from "./RelatedProducts";
import Footer from "./Footer";
import ProductId from "../../api/buyer";
import { useSearchParams } from 'next/navigation'

function ProductPage() {
  const [productData, setProductData] = useState(null);
  const [productId, setProductId] = useState(null);

  const fallbackImage =
  "https://via.placeholder.com/150";

  useEffect(() => {
     // Lấy id từ URL
    const urlParams = new URLSearchParams(window.location.search);
    const id = urlParams.get('id');
    setProductId(id)
    console.log(id);

    const fetchProductById = async () => {
      if (!id) return; // Trả về nếu id chưa có giá trị

      try {
        const response = await ProductId.product.getByIdProduct(id);
        console.log(response.statusCode);
        if (response.statusCode === 200) {
          const productData = {
            id: response.data.productId,
            name: response.data.productName,
            discount: 0, // Lấy discount từ API hoặc gán giá trị mặc định
            currentPrice: "", 
            originalPrice: response.data.price, // Nếu có giá gốc
            rating: 5, // Lấy rating từ API hoặc gán mặc định là 5
            reviews: 65, // Lấy số reviews từ API hoặc gán mặc định
            image: fallbackImage, // Gán ảnh mặc định nếu không có ảnh từ API
          };
          console.log("API response for product details: ", response.data);

          setProductData(productData);  // Gán dữ liệu sản phẩm vào state
          console.log("Product data: ", productData);
        } else {
          console.error("Failed to fetch product details");
        }
      } catch (error) {
        console.error("Error fetching product details:", error);
      }
    };
  
    if (id) {
      fetchProductById();  // Chỉ fetch khi có productId
    }
  }, []);
  
  if (!productData) {
    return <div>Loading...</div>; // Hiển thị loading khi chưa có dữ liệu
  }

  return (
    <div className="flex overflow-hidden flex-col bg-white">
      <Header />
      <div className="flex justify-center items-center flex-1">
        <main>
          <ProductDetails productData={productData}/>
          <RelatedProducts />
        </main>
      </div>
      <Footer />
    </div>
  );
}

export default ProductPage;
